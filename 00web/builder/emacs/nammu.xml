<?xml version="1.0" encoding="utf-8"?>
<esp:page
	xmlns:esp="http://oracc.org/ns/esp/1.0"
	xmlns="http://www.w3.org/1999/xhtml"
>

<esp:name>Nisaba</esp:name>
<esp:title>Working with Nisaba</esp:title>
<html><head/><body>
<p class="firstpara">Nisaba is a cuneioform text editor plug-in, written especially
for Oracc by <esp:link url="https://www.ucl.ac.uk/advanced-research-computing/advanced-research-computing-centre">UCL's Advanced Research Computing Centre</esp:link>, that enables all content creators to edit ATF files within the open-source editor <esp:link url="https://code.visualstudio.com">Visual Studio Code</esp:link>. With Nisaba, you can edit multiple texts at a time and produce translations in both left-to-right scripts such as the western alphabet and right-to-left scripts such as many modern Middle Eastern ones. You can also use it to edit project glossaries and write ESP portals.</p>

<p>Please note that Nisaba's predecessor Nammu is no longer supported. We strongly recommend that you upgrade to Nisaba to edit cuneiform texts for Oracc.</p>

<esp:h>Getting ready to work with Nisaba</esp:h>
<ul>
  <li><esp:link url="https://github.com/oracc/nisaba/blob/main/README.md">Download the code and read the user guide for Nisaba</esp:link> at github.com</li>
<li>Download and install <esp:link url="https://code.visualstudio.com">Visual Studio Code</esp:link></li>
<li><esp:link url="https://github.com/signup">Create a Github account</esp:link> (recommended, see below)</li>
<li>Download and install <esp:link url="https://github.com/apps/desktop">Github Desktop</esp:link> (recommended)</li>
</ul>

<esp:h>Workflow with Nisaba and Github</esp:h>
<p>In order to protect your work, and to maintain the security of the Oracc servers, we now recommend that all Oracc projects operate through a Github repository. Github is an cloud-based storage repository that allows team members to collaborate on writing, editing and sharing code.</p> 

<p>It works like this:</p>
<ul>
  <li>team members create and edit ATF files and/or ESP portal pages with Nisaba and Visual Studio code on their own computers, each on their own "branch"</li>
  <li>team members "push" completed files to the project's Github repository using Visual Studio Code or Github Desktop</li>
  <li>the team leader "reviews" team members' work, either on Github itself or buy "pulling" that branch onto their own computer via Github Desktop. They send comments and corrections through Github for team members to respond to and the cycle is repeated as necessary</li>
<li>the team leader "merges" the corrected files into the "master" branch of the Github repository</li>
<li>the team leader then logs onto the Oracc build server with a terminal and "pulls" the new and updated files from the Github repository onto the build server, in order to <esp:link page="projunix">manage the project</esp:link></li>
<li>Github Desktop will notify team members when they need to "fetch" new and updated project files, created by other team members, from the Github repository</li>
</ul>
<p>This workflow is also recommended for projects that still use Emacs instead of Nisaba + Visual Studio Code.</p>
<esp:h>For project leaders:</esp:h>
<ul>
   <li><esp:link file="system">Configure your computer and server login</esp:link> so that you can work with Github repositories on the Oracc server.</li>
</ul>
<p>If you
want to ask questions, report bugs, or request new features please
create a <span class="cookbook">New Issue</span> with
the green button on Nisaba's Github <esp:link
url="https://github.com/oracc/nisaba/issues" name="Github Oracc/Nammu
Issues" rel="external">Issues page</esp:link>.</p>

<esp:content-last-modified/>
<esp:email address="osc@oracc.org"/>
</body></html></esp:page>
