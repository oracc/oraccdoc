<?xml version="1.0" encoding="UTF-8"?>
<esp:page
	xmlns:esp="http://oracc.org/ns/esp/1.0"
	xmlns="http://www.w3.org/1999/xhtml"
>
	<esp:name>TEI</esp:name>
	<esp:title>Text Encoding Initiative (TEI) for Oracc</esp:title>

	<html>
		<head>
		</head>
		<body>
<p class="firstpara">An ATF corpus can be turned into a TEI corpus; this
  document describes the TEI conventions used and discusses some of
  the issues in this conversion process.</p>

<p>The ATF processor turns ATF into XTF--a multi-stream XML output
which separates the transliteration, the lemmatization and multi-word
analysis of phrases, named entities, measures etc.  The TEI
implementation converts this to a single-stream representation
conformant to the TEI P5 guidelines which can be validated using a
schema generated by Roma.</p>

<p>In a few cases, the mapping of XTF to TEI is suboptimal as a
result of the lack of tags with exactly appropriate semantics or the
forced use of infelicitous constructs.</p>

<esp:h>Preamble</esp:h>

<p>Each ATF text is turned into a <code>TEI</code> text within a
<code>teiCorpus</code>.  Support for the kinds of information that can
go in the <code>teiHeader</code> is weak in ATF corpora; this should
be corrected.</p>

<p>The individual documents are available from a link on the project
page for each text, under the label `<code>Analytic View</code>'.  The
reason for this choice for the label is that the TEI version of the
transliterations integrates the results of running various kinds of
content-analyzers on the texts with the text data itself.  This makes
it easy to colourize the various components identified by the
analyzers.</p>

<p>The final version of the TEI corpus is the concatenation of all of
the files in a project prefaced by a TEI header which includes
elements derived from the project glossaries.  Thus, the TEI corpus
has the potential to represent all of the project's textual and
glossary data in a single file.  Further developments of the XTF to
TEI conversion will aim to make the TEI corpus a complete
representation of the project's glossaries, texts and metadata.</p>

<esp:h>Implementation</esp:h>

<esp:sh>Schema</esp:sh>

<p>The schema is very nearly vanilla TEI P5 as generated by Roma--the
full text can be browsed from the Resources section below.</p>

<p>The only additions which have been made by hand are the definition
of a simple XLink attribute set (<code>att.xlink.attributes</code>),
and the referencing of that definition as an optional part of the
<code>name</code>, <code>note</code> and <code>title</code> elements.
This allows a few key links to be implemented directly in the
browsable XML (when viewed with FireFox, at least).</p>

<esp:sh>Header</esp:sh>

<p>A very basic header is generated in order to meet the TEI
minimum requirements.</p>

<esp:sh>Discourse</esp:sh>

<p>TEI <code>div</code> elements are used for discourse blocks (body,
witnesses, document-date and others).  Blocks which come before the
<code>body</code> are placed in the TEI <code>front</code> section;
blocks which come after the <code>body</code> are placed in the TEI
<code>back</code> section.</p>

<esp:sh>Structure</esp:sh>

<p>XTF structural divisions are rendered with milestone tags.  In the
case of the outer structural division type `<code>surface</code>' we
use the TEI <code>milestone</code> tag.  For column and line breaks we
use <code>cb</code> and <code>lb</code> respectively.</p>

<esp:sh>Inline</esp:sh>

<p>Almost all of the inline markup used by XTF (more precisely, by
GDL) is handled well by TEI.  A few exceptions are noted here.</p>

<p class="alert">There is no <code>suppliedSpan</code>, though it
would be a natural since there is <code>addSpan</code>,
<code>delSpan</code> and <code>damageSpan</code>.  As a result, the
equivalent to square-bracketed text is implemented using paired
<code>anchor</code> tags (it is not possible to use an
<code>anchor</code> ... <code>ptr</code> pair because <code>ptr</code>
is not allowed in <code>w</code>).</p>

<p class="alert">There is no direct TEI tagging for the Assyriological
practice of indicating collations (in this case, collation as in
`checking of tablet' rather than collation of manuscript folios as in
TEI).  The XTF/TEI implementation uses a conventional mapping of
flagged graphemes to TEI tags based on the <code>corr</code> element.
The values <code>high/medium/low</code> are defined to be the specific
equivalents of ATF flag combinations as in the following list.<br/>
<br/>
  <code>?</code> = <code>&lt;corr cert="low"&gt;</code><br/>
  <code>*?</code> = <code>&lt;corr cert="medium"&gt;</code><br/>
  <code>*</code> = <code>&lt;corr cert="high"&gt;</code><br/>
</p>

<esp:sh>Lemmata</esp:sh>

<p>The lemmatization is partly integrated in the use of the
<code>w</code> element.  We push the definition of the
<code>@lemma</code> attribute to include the full
citation-form/guide-word/POS triple that is the standard referencing
mechanism between XTF texts and their corresponding Corpus-Based
Dictionaries.  The additional annotation that is encoded in the
<code>forms</code> structures in XTF files is not presently included.
This will be rectified in a future release, probably by defining a TEI
<code>fs</code> (feature-structure) item for each form and including
it in the corpus preamble, then referencing it using the
<code>@ana</code> attribute on <code>w</code>.</p>

<p>Handling of orthographic forms which contain more than one
grammatical word is not discussed in TEI P5.  The approach taken in
the XTF/TEI conversion is to wrap the entire orthographic form in the
first <code>w</code> tag, then to emit additional <code>w</code>
elements with empty content as hosts for the subsequent lemmata.</p>

<esp:sh>Persons</esp:sh>

<p>Persons are handled in conformance with TEI P5.  Two lists are
generated from the names glossary, a <code>listPerson</code> and a
<code>listNym</code>.  These are then referenced from the
<code>forename</code> tags in the body of texts.  At present the
export of data from the names glossary to
<code>listPerson</code>/<code>listNym</code> is not complete, but the
<code>father</code>, <code>gfather</code> and <code>ancestor</code>
properties are emitted as <code>relation</code>s in the
<code>listPerson</code>.</p>

<esp:sh>Places</esp:sh>

<p>Not yet annotated.</p>

<esp:sh>Measures</esp:sh>

<p>Not yet annotated.</p>

<esp:author first-names="Steve" last-name="Tinney"/>
<esp:content-last-modified/>
<esp:email address="osc@oracc.org"/>

		</body>
	</html>

</esp:page>
